"""add biometric_trends table

Revision ID: a57ace53b4ac
Revises: 131045a89ff6
Create Date: 2025-06-01 21:41:02.100196

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a57ace53b4ac'
down_revision: Union[str, None] = '131045a89ff6'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('biometric_trends',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=True),
    sa.Column('biometric_type', sa.String(length=50), nullable=True),
    sa.Column('trend', sa.String(length=20), nullable=True),
    sa.Column('analyzed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('patient_id', 'biometric_type', name='uq_patient_biometric_trend')
    )
    op.drop_index(op.f('unique_biometric_entry'), table_name='biometrics')
    op.drop_constraint(op.f('uq_biometric_entry'), 'biometrics', type_='unique')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(op.f('uq_biometric_entry'), 'biometrics', ['patient_id', 'biometric_type', 'timestamp'], postgresql_nulls_not_distinct=False)
    op.create_index(op.f('unique_biometric_entry'), 'biometrics', ['patient_id', 'biometric_type', 'timestamp', sa.literal_column("COALESCE(value::text, ''::text)"), sa.literal_column("COALESCE(systolic::text, ''::text)"), sa.literal_column("COALESCE(diastolic::text, ''::text)")], unique=True)
    op.drop_table('biometric_trends')
    # ### end Alembic commands ###
