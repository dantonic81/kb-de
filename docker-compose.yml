version: '3.8'

services:
  db:
    image: postgres:15
    container_name: postgres
    env_file:
      - .env
    restart: unless-stopped
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 5s
      timeout: 3s
      retries: 5

#  pgadmin:
#    image: dpage/pgadmin4
#    container_name: pgadmin
#    env_file:
#      - .env
#    restart: unless-stopped
#    ports:
#      - "8080:80"
#    depends_on:
#      db:
#        condition: service_healthy
#    volumes:
#      - pgadmin_data:/var/lib/pgadmin
#    healthcheck:
#      test: [ "CMD-SHELL", "nc -z -w 1 localhost 80 >/dev/null && echo 'Connection successful' || exit 1" ]
#      interval: 30s
#      timeout: 10s
#      retries: 3

  migrate:
    build: .
    container_name: migrate
    command: alembic upgrade head
    entrypoint: "" # disable the inherited /entrypoint.sh
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    restart: "no"

  api:
    build: .
    container_name: api
    command: ["/entrypoint.sh"]
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    ports:
      - "8000:8000"
    restart: unless-stopped

  dagster:
    build:
      context: .
      dockerfile: Dockerfile.dagster
    container_name: dagster
    env_file:
      - .env
    environment:
      DAGSTER_HOME: /app/dagster_home
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    volumes:
      - .:/app
      - ./dagster_home:/app/dagster_home
      - ./etl_output:/app/rejected
    restart: unless-stopped

  dagster-daemon:
    build:
      context: .
      dockerfile: Dockerfile.dagster
    command: ["sh", "-c", "export DAGSTER_HOME=/app/dagster_home && dagster-daemon run -w /app/dagster_home/workspace.yaml"]
    env_file:
      - .env
    environment:
      DAGSTER_HOME: /app/dagster_home
    volumes:
      - .:/app
      - ./dagster_home:/app/dagster_home
    depends_on:
      - dagster
    restart: unless-stopped

volumes:
  postgres_data:
  pgadmin_data:
